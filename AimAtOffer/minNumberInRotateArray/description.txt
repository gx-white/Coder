题目描述：
把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。
输入一个非递减排序的数组的一个旋转，输出旋转数组的最小元素。
例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。
NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。

思路：
1. 我的方法--暴力）
非递减排序就意思是整体是递增的，但有可能有重复的数字，比如：1,2,3,3,4,5
遍历旋转数字，当其比前一个数字小时，当前数字就是最小数字。复杂度为O(n)

2. 二分法变种
用中间值和高低位进行比较，看处于递增还是递减序列，进行操作缩小范围。
处于递增：low上移
处于递减：high下移（如果是mid-1，则可能会错过最小值，因为找的就是最小值）
其余情况：low++缩小范围

3. 递归
中间数大于左边就往右递归
中间数小于左边就往左递归
