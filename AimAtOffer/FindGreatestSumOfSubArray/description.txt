题目描述：
HZ偶尔会拿些专业问题来忽悠那些非计算机专业的同学。今天测试组开完会后,他又发话了:在古老的一维模式识别中,常常需要计算连续子向量的最大和,当向量全为正数的时候,问题很好解决。但是,如果向量中包含负数,是否应该包含某个负数,并期望旁边的正数会弥补它呢？例如:{6,-3,-2,7,-15,1,2,2},连续子向量的最大和为8(从第0个开始,到第3个为止)。给一个数组，返回它的最大连续子序列的和，你会不会被他忽悠住？(子向量的长度至少是1)

思路：
(没错，就是这种题目了...我做不来的那种...)

把看到的几种做法都写一下吧。
（感觉我被之前对这种题的印象吓到了，总觉得做不出来。想不出好的，还能想不出暴力的？）

最暴力的：
两层循环，累加，并每次记录当前的和，有一个变量用来记录最大值，如果当前和大于最大值，则替换
其实在不断累加的过程中，就相当于是遍历是各个长度的数组了。
比如[1, -2, 3, 10, -4, 7, 2, -5]，在从3开始遍历，会遍历[3,10],[3,10,-4],...这些数组。
也就是每个子数组都被遍历了


其他：
定义两个变量：“累加子数组和”和“最大子数组和”，第一步把数组中的第一个数字赋值给他们，然后从第二个数字开始累加，累加值放入“累加子数组和”。
1.如果当前“累加子数组和”小于0，那抛弃前面的“累加子数组和”，从下一个数字开始重新累加，“最大子数组和”的值不更新。
2.如果当前“累加子数组和”大于0，再让当前“累加子数组和”和当前的“最大子数组和”进行比较。
    2.1如果当前“累加子数组和”大于当前“最大子数组和”，则更新“最大子数组和”的值为“累加子数组和”的值。
    2.2如果当前“累加子数组和”小于当前“最大子数组和”，“最大子数组和”的值不更新。
3.再加入数组中的下一个值，“累加子数组和”进入下一轮的累加，“最大子数组和”也进入下一轮的更新。直到数组中所有值都累加完毕。

