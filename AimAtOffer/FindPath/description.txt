题目描述：
输入一颗二叉树的根节点和一个整数，打印出二叉树中结点值的和为输入整数的所有路径。路径定义为从树的根结点开始往下一直到叶结点所经过的结点形成一条路径。(注意: 在返回值的list中，数组长度大的数组靠前)

思路：
（感觉这道题应该是我做不出来的题☹️）
就一直递归，然后累减（用整数不断减去根节点的值），当根节点值大于整数时退出/或者当到达叶子结点
有个问题是如何存储路径？

我的思路：（惊不惊喜，意不意外...我竟然真的做出来了🤣）
方式就是递归，然后用一个数组来记录当前路径，这个数组整个过程中只用到一个，在递归过程中不断append/pop，这样代码写起来很方便
递归过程中不断减小expectNumber，当该值减去当前节点值为0，并且当前节点是叶子节点时，表示这条路径可行...把这条路径存储到一个数组中self.x。继续递归

最后还要求输出的二维数组按照一维数组长度排序，就又写了一个排序算法，应该是选择排序，还对我的c代码有点印象呢

看了评论，我的答案很标准嘛（感觉自己加了buff）