题目描述：
输入一个正整数数组，把数组里所有数字拼接起来排成一个数，打印能拼接出的所有数字中最小的一个。例如输入数组{3，32，321}，则打印出这三个数字能排成的最小数字为321323。

思路：
我的思路：
从左到右依次比较每一位数字的大小，相同则接着比较下一位
要怎么取出每个数字的各位上的数字
感觉这个应该可以理解成是字符串的字典序降序排列。
不是这样的，比如 1 2 3 4 5 要输出的其实是字典序升序，而
321 32 3这个是要输出字典序降序，其实就是位数相同的数字按字典序升序，位数不同的按字典序降序
3 32 321(字典序升序)

[3334,3,3333332] 我的策略是错的，无法通过这种情况


正确思路：
类似于选择排序的写法。其实说到底就是给字符串进行一个排序，只是这种排序不是直接比较大小，而是判断s1和s2两个字符串哪个放在前面会让形成的数字更小。然后选择排序，把放在前面更小的数字逐渐往前移。
我也是在评论里看到这句话恍然大悟的 --> 
    所以在这里自定义一个比较大小的函数，比较两个字符串s1, s2大小的时候，先将它们拼接起来，比较s1+s2,和s2+s1那个大，如果s1+s2大，那说明s2应该放前面，所以按这个规则，s2就应该排在s1前面。


总结一下：
虽然最后没有做出来，但是想到用字符串来处理，然后想到要求字典序，也算是值得鼓励吧。
这道题就算过去啦。