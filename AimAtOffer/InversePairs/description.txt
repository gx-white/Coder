题目描述：
在数组中的两个数字，如果前面一个数字大于后面的数字，则这两个数字组成一个逆序对。输入一个数组,求出这个数组中的逆序对的总数P。并将P对1000000007取模的结果输出。 即输出P%1000000007
输入描述:
题目保证输入的数组中没有的相同的数字

数据范围：
	对于%50的数据,size<=10^4
	对于%75的数据,size<=10^5
	对于%100的数据,size<=2*10^5
示例1
输入
1,2,3,4,5,6,7,0
输出
7

思路：
这个题目要是暴力一直去遍历的话，数据量很大，估计是要凉凉。
但又指的不是相邻的。
是不是可以倒着遍历，然后累加？？
感觉是经过多少冒泡次变换可以变成递增序列？这个次数就对应着逆序对的个数。
而且我感觉可能会出现溢出的问题，要用到(a+b)%c = a%c+b%c这个公式

如果是在冒泡排序过程中去数的话复杂度是O(n^2)，但是暴力遍历的话复杂度也是O(n^2)。

1 2 3 4 5 6 7 0
从0开始遍历，0对应的是result[0] = 1
从7开始遍历，找到第一个小于它的数字，然后result[7]=result[0]+1
不对！！
还是先暴力做一下吧。

暴力果然会超时。

7,1,2,3,4,5,0,6   -->> 正确结果是 7 + 5 = 12
数值   -     坐标
0     -      6
1     -      1
2     -      2
3     -      3
4     -      4
5     -      5  
6     -      7  
7     -      0  
