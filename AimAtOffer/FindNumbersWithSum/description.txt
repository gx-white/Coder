题目描述：
输入一个递增排序的数组和一个数字S，在数组中查找两个数，使得他们的和正好是S，如果有多对数字的和等于S，输出两个数的乘积最小的。

输出描述:
对应每个测试案例，输出两个数，小的先输出。

思路：
看上一个题目的时候其实看到了这个题目的解法来着。好像也是用双指针的方法。
那我就先试一下哈

做出来了，可以这样的。但是还是借助调试才找到了边界条件等。
现在做的跟上一个题目一样，只是每种情况的处理不一样。
初始化左右两个指针分别位于0 1两个位置。
小于和时候右指针右移
大于的时候左指针右移，并且右指针放到左指针的右侧...
😯我突然反应过来，我这样做其实就跟双层循环是一样的呀...
都遍历了一遍...🙃🙃
而且还不如双层递归写起来简单明了


正确思路：
首先，相距最大的乘积最小。
其次，双指针是左右夹逼用法。这样其实第一对找到的就是乘积最小的。