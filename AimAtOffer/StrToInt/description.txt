题目描述：
将一个字符串转换成一个整数，要求不能使用字符串转换整数的库函数。 数值为0或者字符串不是一个合法的数值则返回0
输入描述:
输入一个字符串,包括数字字母符号,可以为空
输出描述:
如果是合法的数值表达则返回该数字，否则返回0
示例1
输入
+2147483647
    1a33
输出
2147483647
    0


思路：
不知道要不要考虑科学计数法？
直接去看了帖子，比我想的巧妙多了，我刚开始是想每遍历一个数字，就乘以它的权，权通过字符串长度与当前位来计算...
正确是，每次添加新的数字的时候乘10就可以了...

这个题目的测试用例有问题，fo了。
用例:
-2147483649

对应输出应该为:

0

你的输出为:

-2147483649

收获点就是：
((num << 1) & (num << 3)) == num * 10  位运算加快运算速度。看评论里说会快一点。
char & 0xf == char - '0'  因为字符0-9的低四位正好对应着0-9，所以与0xf相与之后，正好相当于减掉'0'