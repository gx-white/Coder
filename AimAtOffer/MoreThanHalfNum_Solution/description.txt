题目描述：
数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。例如输入一个长度为9的数组{1,2,3,2,2,2,5,4,2}。由于数字2在数组中出现了5次，超过数组长度的一半，因此输出2。如果不存在则输出0。

思路：
我的思路：
把给出的数组排序（用了选择排序算法，或者直接用python自带的函数），
然后就开始数连着相等的数的个数，
题目的意思应该是只有一个数字的个数是超过数组长度的一半的，
所以找到这个数字之后就可以直接break了
要注意对特殊情况->数组长度为1的情况的处理

看到评论里排序之后，如果存在这样的一个数，这个数一定是数组中间的那个数

（每个题目的解法都有好多啊🙃）

1. 先挑一个看起来好理解的(46ms)
数组中有一个数字出现的次数超过数组长度的一半，那它出现的次数比其他数字出现次数之和还要多。
在遍历数组时存储两个值，一个是数组中的数字，一个是次数。
+ 下一个数和之前保存的数字相同，则次数加1
+ 不同则减1
+ 次数为0则保存下一个数字，并把次数设为1
由于我们要找的数字出现的次数比其他所有数字出现的次数之和还要多，那么要找的数字肯定是最后一次把次数设为1时对应的数字。

2. 基于快速排序方法来实现O(n)(26ms)
因为出现次数超过数组长度一般的数字在排序之后一定是位于数组中间的，所以这个数字是数组的第n/2大的数字
还是考虑对数组进行排序
只是基于快速排序算法，在每次循环结束，数组被分为左右两个部分，选择其中一部分来接着递归
这样时间复杂度就逼快排减少了
（又学会一个快速排序...是冒泡排序的一种改进，分治法）