题目描述：
输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否可能为该栈的弹出顺序。假设压入栈的所有数字均不相等。例如序列1,2,3,4,5是某栈的压入顺序，序列4,5,3,2,1是该压栈序列对应的一个弹出序列，但4,3,5,1,2就不可能是该压栈序列的弹出序列。（注意：这两个序列的长度是相等的）

思路：
要么在程序里走？？每一步要么是压栈要么是出栈，递归出来，判断是不是给出的pop序列？？

假如长度为n，那么应该是有2^(n-1)种可能的？（第一个位置一定是入栈）

感觉不知道怎么写，所以又跑出另外一个想法，是对的哦。
（我的思路）
因为可能的情况有很多，上面写的其实是想把所有的想法跑出来，然后比较和popV是否相等，就比较复杂
所以换成是验证popV是否可以，就简单很多。
按照入栈的顺序重新入栈一次，但是在入栈的时候，要结合出栈的顺序来判断是否应该出栈。


觉得自己不光想出来了，而且写的很完美~~开心
