题目描述：
输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。

思路：
求负数补码
1. 求出负数绝对值的原码
2. 从原码的最后一位数码位往前数，当遇到第一个1时停在此位置
3. 将第一个1前面的数码全部求反

负数补码还原成原码
1. 从补码的最后一位数码位往前数，遇到第一个1时停止
2. 将第一个1前的全部数码取反
3. 将第一个数码置1（原来肯定是0，因为我们这里只讨论负数的补码）

上面是编程求补码的方式。

这个题目的意思是，一个整数，它是正数的话，就求它的原码/反码/补码（对于正数来说都一样）表示中1的个数
如果是负数的话，就求它的补码表示中1的个数
另外，这个题目应该就是意思是32位长度的整数，范围是-2^32 ~ 2^32-1

n & (n-1) 是一种妙用，可以用来求二进制中1的个数
但是在python中，如果n是负数，进行该操作时不是通过转换为补码进行的，所以需要手动把它转换成补码形式，也就是通过n & 0xffffffff，变化之后python就会把它当正数来处理，然后就可以通过n & (n-1)的方式来求1的个数了
（还是感觉有点绕，应该理解对了吧）

